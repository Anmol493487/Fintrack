{"ast":null,"code":"//waiting function\nexport const wait = () => new Promise(res => setTimeout(res, 800));\n\n//getting the data from local storage\nexport function fetchData(key) {\n  const value = localStorage.getItem(key);\n  return JSON.parse(value);\n}\n\n//delete the data in local storage\nexport function deleteItem({\n  key\n}) {\n  return localStorage.removeItem(key);\n}\n\n//generating random colors for budgets\nconst generateRandomColor = () => {\n  var _fetchData$length, _fetchData;\n  const existingBudgetLength = (_fetchData$length = (_fetchData = fetchData(\"budgets\")) === null || _fetchData === void 0 ? void 0 : _fetchData.length) !== null && _fetchData$length !== void 0 ? _fetchData$length : 0;\n  return `${existingBudgetLength * 34} 65% 50%`;\n};\n\n//Matching Items from List of Items\nexport const matchItems = ({\n  category,\n  key,\n  value\n}) => {\n  var _fetchData2;\n  const items = (_fetchData2 = fetchData(category)) !== null && _fetchData2 !== void 0 ? _fetchData2 : [];\n  return items.filter(item => item[key] === value);\n};\n\n//creating budget and adding new budgetItem into the existing budgets\nexport const createBudget = ({\n  newBudget,\n  amount\n}) => {\n  var _fetchData3;\n  const newItem = {\n    name: newBudget,\n    amount: +amount,\n    id: crypto.randomUUID(),\n    createdAt: Date.now(),\n    color: generateRandomColor()\n  };\n  const existingBudgets = (_fetchData3 = fetchData(\"budgets\")) !== null && _fetchData3 !== void 0 ? _fetchData3 : [];\n  return localStorage.setItem(\"budgets\", JSON.stringify([...existingBudgets, newItem]));\n};\n\n//creating new Expense \nexport const createExpense = ({\n  newExpense,\n  newExpenseAmount,\n  newExpenseBudget\n}) => {\n  var _fetchData4;\n  const newItem = {\n    name: newExpense,\n    amount: +newExpenseAmount,\n    createdAt: Date.now(),\n    id: crypto.randomUUID(),\n    budgetId: newExpenseBudget\n  };\n  const existingExpenses = (_fetchData4 = fetchData(\"expenses\")) !== null && _fetchData4 !== void 0 ? _fetchData4 : [];\n  return localStorage.setItem(\"expenses\", JSON.stringify([...existingExpenses, newItem]));\n};\n\n//Delete Item in a list of items\nexport const deleteItemsInList = ({\n  category,\n  key,\n  value\n}) => {\n  var _fetchData5;\n  const newListItems = ((_fetchData5 = fetchData(category)) !== null && _fetchData5 !== void 0 ? _fetchData5 : []).filter(item => item[key] !== value);\n  deleteItem({\n    key: category\n  });\n  localStorage.setItem(category, JSON.stringify(newListItems));\n};\n\n//Formatting\n\n//Format currency\nexport const formatCurrency = amount => {\n  return amount.toLocaleString(undefined, {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n};\n\n//Formatting Percentage\nexport const formatPercentage = amt => {\n  return amt.toLocaleString(undefined, {\n    style: \"percent\",\n    minimumFractionDigits: 0\n  });\n};\n\n//Formatting Date\nexport const formatDateToLocalString = ms => {\n  return new Date(ms).toLocaleDateString();\n};\n\n//total spent by budget\nexport const calculateSpentByBudget = budgId => {\n  var _fetchData6;\n  const expenses = (_fetchData6 = fetchData(\"expenses\")) !== null && _fetchData6 !== void 0 ? _fetchData6 : [];\n  return expenses.reduce((accumulator, currentValue) => currentValue.budgetId === budgId ? accumulator + currentValue.amount : accumulator, 0);\n};","map":{"version":3,"names":["wait","Promise","res","setTimeout","fetchData","key","value","localStorage","getItem","JSON","parse","deleteItem","removeItem","generateRandomColor","_fetchData$length","_fetchData","existingBudgetLength","length","matchItems","category","_fetchData2","items","filter","item","createBudget","newBudget","amount","_fetchData3","newItem","name","id","crypto","randomUUID","createdAt","Date","now","color","existingBudgets","setItem","stringify","createExpense","newExpense","newExpenseAmount","newExpenseBudget","_fetchData4","budgetId","existingExpenses","deleteItemsInList","_fetchData5","newListItems","formatCurrency","toLocaleString","undefined","style","currency","formatPercentage","amt","minimumFractionDigits","formatDateToLocalString","ms","toLocaleDateString","calculateSpentByBudget","budgId","_fetchData6","expenses","reduce","accumulator","currentValue"],"sources":["C:/Users/anmol/Downloads/budget-app-main/budget-app-main/src/helper.js"],"sourcesContent":["//waiting function\nexport const wait = ()=>new Promise((res)=>setTimeout(res,800));\n\n//getting the data from local storage\nexport function fetchData(key) {\n    const value = localStorage.getItem(key);\n    return JSON.parse(value);\n}\n\n//delete the data in local storage\nexport function deleteItem({key}) {\n    return localStorage.removeItem(key);\n }\n\n \n//generating random colors for budgets\nconst generateRandomColor = ()=>{\n    const existingBudgetLength = fetchData(\"budgets\")?.length ?? 0;\n    return `${existingBudgetLength * 34} 65% 50%`;\n}\n\n//Matching Items from List of Items\nexport const matchItems = ({category,key,value})=>{\n    const items = fetchData(category)??[];\n    return items.filter((item)=>item[key] === value);\n}\n\n//creating budget and adding new budgetItem into the existing budgets\nexport const createBudget = ({newBudget,amount})=>{\n\n    const newItem = {\n        name:newBudget,\n        amount:+amount,\n        id:crypto.randomUUID(),\n        createdAt:Date.now(),\n        color:generateRandomColor(),\n    };\n\n    const existingBudgets = fetchData(\"budgets\") ?? [];\n    return localStorage.setItem(\"budgets\",JSON.stringify([...existingBudgets,newItem]));\n\n}\n\n//creating new Expense \nexport const createExpense = ({newExpense,newExpenseAmount,newExpenseBudget})=>{\n\n    const newItem = {\n        name:newExpense,\n        amount:+newExpenseAmount,\n        createdAt:Date.now(),\n        id:crypto.randomUUID(),\n        budgetId:newExpenseBudget,\n    };\n\n    const existingExpenses = fetchData(\"expenses\") ?? [];\n    return localStorage.setItem(\"expenses\",JSON.stringify([...existingExpenses,newItem]));\n\n}\n\n//Delete Item in a list of items\nexport const deleteItemsInList = ({category,key,value})=>{\n    const newListItems = (fetchData(category)??[]).filter((item)=>item[key] !== value);\n    deleteItem({key:category});\n    localStorage.setItem(category,JSON.stringify(newListItems));\n}\n\n//Formatting\n\n//Format currency\nexport const formatCurrency = (amount)=>{\n    return amount.toLocaleString(undefined,{\n        style:\"currency\",\n        currency:\"USD\",\n    })\n}\n\n//Formatting Percentage\nexport const formatPercentage = (amt)=>{\n    return amt.toLocaleString(undefined,{\n        style:\"percent\",\n        minimumFractionDigits:0,\n    })\n}\n\n//Formatting Date\nexport const formatDateToLocalString = (ms)=>{\n    return new Date(ms).toLocaleDateString();\n}\n\n\n//total spent by budget\nexport const calculateSpentByBudget = (budgId)=>{\n    const expenses = fetchData(\"expenses\") ?? [];\n    return expenses.reduce((accumulator,currentValue)=>\n        (currentValue.budgetId === budgId)?(accumulator + currentValue.amount):(accumulator)\n    ,0);\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}